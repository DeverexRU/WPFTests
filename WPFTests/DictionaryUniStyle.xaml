<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFTests">

    <!-- Заготовки кистей -->
    <SolidColorBrush x:Key="uniBackColor" Color="White"  />
    <SolidColorBrush x:Key="uniBackElementColor" Color="#606060"  />
    <!-- Thickness x:Key="buttonMargin11" Bottom="4" Left="2" Top="4" Right="2" /-->


    <!-- Определение ЭЛЕМЕНТОВ -->

    
    <Style TargetType="StackPanel">
        <Setter Property="Background" Value="{DynamicResource uniBackColor}" />
    </Style>


    <!-- Button -->
    
    <!--<Style TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>

        <Setter Property="FontFamily" Value="Verdana" />

        <Setter Property="Background" Value="{DynamicResource uniBackElementColor}"/>
        
        <Setter Property="Foreground" Value="Green" />
        
        --><!-- " Thickness x:Key="buttonMargin11" Bottom="10" Left="10" Top="10" Right="10" / --><!--
        
    </Style>-->

    <!-- Checkbox -->

    <Style TargetType="CheckBox">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="Background" Value="Blue" />
        <Setter Property="Foreground" Value="Green" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <!-- Стиль для группы свойств элемента конкретного типа. Перекрывается отдельно назначемыми стилями -->
    
    

    <!-- Стили для отдельных свойств элементов - ->
    <FontFamily x:Key="buttonFont11">Verdana</FontFamily>
    <SolidColorBrush Color="White" x:Key="buttonFontColor11" />
    <SolidColorBrush Color="Black" x:Key="buttonBackColor11" />
    <Thickness x:Key="buttonMargin11" Bottom="10" Left="10" Top="10" Right="10" />

    <!- - Стиль для группы свойств элемента - ->
    <Style x:Key="BlackAndWhite11">
        <!- - СВОЙСТВА - ->
        <Setter Property="Control.FontFamily" Value="Verdana" />
        <Setter Property="Control.Background" Value="Black" />
        <Setter Property="Control.Foreground" Value="White" />
        <Setter Property="Control.Margin" Value="10" />
        <!- - ОБРАБОТЧИК СОБЫТИЯ Enent=Класс.Событие - ->
        <!- -EventSetter Event="Button.Click" Handler="button_Click" /> <!- - в словаре есть какие-то сложности с обработчиком - ->
    </Style -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="GreenYellow" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#aaa" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/> <!--https://askdev.ru/q/kogda-sleduet-ispolzovat-snapstodevicepixels-v-wpf-4-0-55142/-->
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/> <!--https://docs.microsoft.com/ru-ru/dotnet/api/system.windows.frameworkelement.overridesdefaultstyle?view=netframework-4.8-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 1, 23, 1" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        
        
    </Style>




    <!--<Style x:Key="ButtonFlatStyle"  TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        --><!--https://askdev.ru/q/kogda-sleduet-ispolzovat-snapstodevicepixels-v-wpf-4-0-55142/--><!--
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        --><!--https://docs.microsoft.com/ru-ru/dotnet/api/system.windows.frameworkelement.overridesdefaultstyle?view=netframework-4.8-->
        <!--<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>--><!--
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        --><!--<ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>-->

                        <!--<ContentPresenter Name="ContentSite" Margin="5, 1, 23, 1" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>-->
                        
                        <!--<TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>--><!--

                        <ContentPresenter>
                            <ContentPresenter.Content>
                                <Rectangle Width="80" Height="40" Fill="LightBlue"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                        
                        --><!--<ContentPresenter
                            HorizontalAlignment="Left" VerticalAlignment="Center"/>-->
                        
                        <!--<ContentPresenter>
                            <ContentPresenter.Content>
                                <x:Type TypeName="ContentPresenter"/>
                            </ContentPresenter.Content>
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Namespace}"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>-->

                        <!-- Popup showing items -->
                        <!--<Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>--><!--
                    </Grid>
                    
                    --><!--<ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>--><!--
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>-->


    <Style x:Key="ButtonFlatStyle"  TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <!--<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>-->
        <Setter Property="Control.Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="MediumPurple" BorderThickness="2" CornerRadius="2" Name="border"
                    TextBlock.Foreground="Black" TextBlock.FontFamily="Calibri">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStopCollection>
                                    <GradientStop Offset="0" Color="LightBlue"></GradientStop>
                                    <GradientStop Offset="1" Color="LightCyan"></GradientStop>
                                </GradientStopCollection>
                            </LinearGradientBrush>
                        </Border.Background>
                        <!--<ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>-->

                        <Viewbox> 
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Viewbox>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="skyblue"></Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="mediumturquoise"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="cadetblue"></Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="Green"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        
    </Style>
 
    <!--<Style x:Key="TextBoxStyle0" TargetType="{x:Type TextBox}">
        <Setter Property="Control.Background" Value="Yellow" />
        <Setter Property="Control.BorderBrush" Value="LightCoral" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Foreground" Value="Black" />
        <Setter Property="Control.Padding" Value="5,4,5,4" />
        <Setter Property="SelectionBrush" Value="DarkGray" />
        <Setter Property="Control.Template" />
        <Setter>
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentHost"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="20" Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Background="DarkGreen" CornerRadius="2" Opacity="0"/>
                                <ScrollViewer x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}" BorderThickness="0" IsTabStop="False" Margin="1" Padding="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" Background="Black" IsHitTestVisible="False" Margin="1" Opacity="0" CornerRadius="20"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="2" Opacity="0" RadiusX="20" RadiusY="20" StrokeThickness="1,1,1,1"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="Crimson" BorderThickness="1" CornerRadius="30" Visibility="Collapsed">
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="Crimson" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>